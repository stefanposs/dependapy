name: Release

on:
  push:
    branches:
      - 'main'

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Clone repository
      uses: actions/checkout@v4
      with:
        fetch-depth: '0'
    - name: Use Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    - name: Install dependencies
      run: |
        # Install uv using the official installation method
        curl -LsSf https://astral.sh/uv/install.sh | sh
        
        # Add uv to PATH (use .local/bin where it's actually installed)
        export PATH="$HOME/.local/bin:$PATH"
        
        # Create a virtual environment or use system flag
        uv sync
        
        # Use uv to install dependencies
        uv add twine pytest-timeout pytest-asyncio pytest-cov ruff pyright bandit

    - name: Run QA
      run: make qa
    - name: Build package
      run: |
        uv build
    - name: Publish package
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TOKEN_GITHUB_TO_PYPI_RW }}
      run: |
        uv run twine upload dist/* --verbose

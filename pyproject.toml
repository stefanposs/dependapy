[project]
name = "dependapy"
version = "0.1.0"
description = "A custom dependabot alternative for Python projects"
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}
authors = [
    {name = "stefanposs", email = "hello@stefanposs.com"},
]
keywords = ["dependencies", "update", "dependabot"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Version Control",
]

dependencies = [
    "requests==2.31.0",
    "packaging==23.2",
    "tomli==2.0.1; python_version < '3.11'",
    "PyGithub==2.1.1",
]


[dependency-groups]
dev = [
    "pytest==7.4.0",
    "pytest-mock==3.11.0",
    "ruff==0.3.2",
    "pyright==1.1.401",
    "bandit==1.7.5",
    "pytest-cov==4.1.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["dependapy"]

[tool.ruff]
target-version = "py310"
line-length = 100
lint.select = ["ALL"]  # Enable all rules
lint.ignore = [
    # Ignore assert usage in tests
    "S101", 
    # Ignore missing type annotations in tests and non-critical code
    "ANN001", "ANN201", 
    # Ignore docstring style issues
    "D400", "D401", "D415", "D205", "D212", "D200", 
    # Ignore subprocess security issues - they're used with fixed commands
    "S603", "S607",
    # Ignore blind exceptions - already handled with logging
    "BLE001",
    # Ignore magic values in comparisons
    "PLR2004",
    # Ignore unnecessary else after return
    "RET505",
    # Ignore function complexity for now
    "C901", "PLR0912",
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = [
    "S101",     # Allow assert in tests
    "F401",     # Allow unused imports in tests
    "UP015",    # Allow open mode parameters in tests
    "PT001",    # Allow pytest.fixture without parentheses
    "S106",     # Allow hardcoded passwords in test code
    "I001",     # Allow unsorted imports in tests
    "W291",     # Allow trailing whitespace in tests
    "PTH123",   # Allow open() instead of Path.open() in tests
    "PTH103",   # Allow os.makedirs() instead of Path.mkdir(parents=True) in tests
    "SIM117",   # Allow nested with statements in tests
    "ARG005",   # Allow unused arguments in tests
    "COM812",   # Allow missing trailing commas in tests
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B404", "B603", "B607"]